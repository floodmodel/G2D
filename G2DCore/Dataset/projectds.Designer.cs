//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace G2DCore.Dataset {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("projectds")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class projectds : global::System.Data.DataSet {
        
        private ProjectSettingsDataTable tableProjectSettings;
        
        private HydroParsDataTable tableHydroPars;
        
        private RainfallDataTable tableRainfall;
        
        private BoundaryConditionDataDataTable tableBoundaryConditionData;
        
        private DEMFileToChangeDataTable tableDEMFileToChange;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public projectds() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected projectds(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProjectSettings"] != null)) {
                    base.Tables.Add(new ProjectSettingsDataTable(ds.Tables["ProjectSettings"]));
                }
                if ((ds.Tables["HydroPars"] != null)) {
                    base.Tables.Add(new HydroParsDataTable(ds.Tables["HydroPars"]));
                }
                if ((ds.Tables["Rainfall"] != null)) {
                    base.Tables.Add(new RainfallDataTable(ds.Tables["Rainfall"]));
                }
                if ((ds.Tables["BoundaryConditionData"] != null)) {
                    base.Tables.Add(new BoundaryConditionDataDataTable(ds.Tables["BoundaryConditionData"]));
                }
                if ((ds.Tables["DEMFileToChange"] != null)) {
                    base.Tables.Add(new DEMFileToChangeDataTable(ds.Tables["DEMFileToChange"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectSettingsDataTable ProjectSettings {
            get {
                return this.tableProjectSettings;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HydroParsDataTable HydroPars {
            get {
                return this.tableHydroPars;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RainfallDataTable Rainfall {
            get {
                return this.tableRainfall;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BoundaryConditionDataDataTable BoundaryConditionData {
            get {
                return this.tableBoundaryConditionData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEMFileToChangeDataTable DEMFileToChange {
            get {
                return this.tableDEMFileToChange;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            projectds cln = ((projectds)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProjectSettings"] != null)) {
                    base.Tables.Add(new ProjectSettingsDataTable(ds.Tables["ProjectSettings"]));
                }
                if ((ds.Tables["HydroPars"] != null)) {
                    base.Tables.Add(new HydroParsDataTable(ds.Tables["HydroPars"]));
                }
                if ((ds.Tables["Rainfall"] != null)) {
                    base.Tables.Add(new RainfallDataTable(ds.Tables["Rainfall"]));
                }
                if ((ds.Tables["BoundaryConditionData"] != null)) {
                    base.Tables.Add(new BoundaryConditionDataDataTable(ds.Tables["BoundaryConditionData"]));
                }
                if ((ds.Tables["DEMFileToChange"] != null)) {
                    base.Tables.Add(new DEMFileToChangeDataTable(ds.Tables["DEMFileToChange"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProjectSettings = ((ProjectSettingsDataTable)(base.Tables["ProjectSettings"]));
            if ((initTable == true)) {
                if ((this.tableProjectSettings != null)) {
                    this.tableProjectSettings.InitVars();
                }
            }
            this.tableHydroPars = ((HydroParsDataTable)(base.Tables["HydroPars"]));
            if ((initTable == true)) {
                if ((this.tableHydroPars != null)) {
                    this.tableHydroPars.InitVars();
                }
            }
            this.tableRainfall = ((RainfallDataTable)(base.Tables["Rainfall"]));
            if ((initTable == true)) {
                if ((this.tableRainfall != null)) {
                    this.tableRainfall.InitVars();
                }
            }
            this.tableBoundaryConditionData = ((BoundaryConditionDataDataTable)(base.Tables["BoundaryConditionData"]));
            if ((initTable == true)) {
                if ((this.tableBoundaryConditionData != null)) {
                    this.tableBoundaryConditionData.InitVars();
                }
            }
            this.tableDEMFileToChange = ((DEMFileToChangeDataTable)(base.Tables["DEMFileToChange"]));
            if ((initTable == true)) {
                if ((this.tableDEMFileToChange != null)) {
                    this.tableDEMFileToChange.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "projectds";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/projectds.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjectSettings = new ProjectSettingsDataTable();
            base.Tables.Add(this.tableProjectSettings);
            this.tableHydroPars = new HydroParsDataTable();
            base.Tables.Add(this.tableHydroPars);
            this.tableRainfall = new RainfallDataTable();
            base.Tables.Add(this.tableRainfall);
            this.tableBoundaryConditionData = new BoundaryConditionDataDataTable();
            base.Tables.Add(this.tableBoundaryConditionData);
            this.tableDEMFileToChange = new DEMFileToChangeDataTable();
            base.Tables.Add(this.tableDEMFileToChange);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeProjectSettings() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeHydroPars() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeRainfall() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeBoundaryConditionData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializeDEMFileToChange() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            projectds ds = new projectds();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void ProjectSettingsRowChangeEventHandler(object sender, ProjectSettingsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void HydroParsRowChangeEventHandler(object sender, HydroParsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void RainfallRowChangeEventHandler(object sender, RainfallRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void BoundaryConditionDataRowChangeEventHandler(object sender, BoundaryConditionDataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void DEMFileToChangeRowChangeEventHandler(object sender, DEMFileToChangeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectSettingsDataTable : global::System.Data.TypedTableBase<ProjectSettingsRow> {
            
            private global::System.Data.DataColumn columnDEMFile;
            
            private global::System.Data.DataColumn columnLandCoverFile;
            
            private global::System.Data.DataColumn columnLandCoverVatFile;
            
            private global::System.Data.DataColumn columnStartDateTime;
            
            private global::System.Data.DataColumn columnIsFixedDT;
            
            private global::System.Data.DataColumn columnCalculationTimeStep_sec;
            
            private global::System.Data.DataColumn columnIsParallel;
            
            private global::System.Data.DataColumn columnMaxDegreeOfParallelism;
            
            private global::System.Data.DataColumn columnUsingGPU;
            
            private global::System.Data.DataColumn columnEffCellThresholdForGPU;
            
            private global::System.Data.DataColumn columnMaxIterationAllCellsOnCPU;
            
            private global::System.Data.DataColumn columnMaxIterationACellOnCPU;
            
            private global::System.Data.DataColumn columnMaxIterationAllCellsOnGPU;
            
            private global::System.Data.DataColumn columnMaxIterationACellOnGPU;
            
            private global::System.Data.DataColumn columnSimulationDuration_hr;
            
            private global::System.Data.DataColumn columnPrintoutInterval_min;
            
            private global::System.Data.DataColumn columnRainfallDataType;
            
            private global::System.Data.DataColumn columnRainfallDataInterval_min;
            
            private global::System.Data.DataColumn columnRainfallFile;
            
            private global::System.Data.DataColumn columnBCDataInterval_min;
            
            private global::System.Data.DataColumn columnFloodingCellDepthThresholds_cm;
            
            private global::System.Data.DataColumn columnMakeASCFile;
            
            private global::System.Data.DataColumn columnMakeImgFile;
            
            private global::System.Data.DataColumn columnOutputDepth;
            
            private global::System.Data.DataColumn columnDepthImgRendererMaxV;
            
            private global::System.Data.DataColumn columnOutputHeight;
            
            private global::System.Data.DataColumn columnHeightImgRendererMaxV;
            
            private global::System.Data.DataColumn columnOutputVelocityMax;
            
            private global::System.Data.DataColumn columnVelocityMaxImgRendererMaxV;
            
            private global::System.Data.DataColumn columnOutputFDofMaxV;
            
            private global::System.Data.DataColumn columnDischargeImgRendererMaxV;
            
            private global::System.Data.DataColumn columnOutputDischargeMax;
            
            private global::System.Data.DataColumn columnOutputRFGrid;
            
            private global::System.Data.DataColumn columnRFImgRendererMaxV;
            
            private global::System.Data.DataColumn columnWriteLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsDataTable() {
                this.TableName = "ProjectSettings";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ProjectSettingsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected ProjectSettingsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DEMFileColumn {
                get {
                    return this.columnDEMFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandCoverFileColumn {
                get {
                    return this.columnLandCoverFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LandCoverVatFileColumn {
                get {
                    return this.columnLandCoverVatFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StartDateTimeColumn {
                get {
                    return this.columnStartDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsFixedDTColumn {
                get {
                    return this.columnIsFixedDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CalculationTimeStep_secColumn {
                get {
                    return this.columnCalculationTimeStep_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsParallelColumn {
                get {
                    return this.columnIsParallel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxDegreeOfParallelismColumn {
                get {
                    return this.columnMaxDegreeOfParallelism;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UsingGPUColumn {
                get {
                    return this.columnUsingGPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EffCellThresholdForGPUColumn {
                get {
                    return this.columnEffCellThresholdForGPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxIterationAllCellsOnCPUColumn {
                get {
                    return this.columnMaxIterationAllCellsOnCPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxIterationACellOnCPUColumn {
                get {
                    return this.columnMaxIterationACellOnCPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxIterationAllCellsOnGPUColumn {
                get {
                    return this.columnMaxIterationAllCellsOnGPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxIterationACellOnGPUColumn {
                get {
                    return this.columnMaxIterationACellOnGPU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SimulationDuration_hrColumn {
                get {
                    return this.columnSimulationDuration_hr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrintoutInterval_minColumn {
                get {
                    return this.columnPrintoutInterval_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallDataTypeColumn {
                get {
                    return this.columnRainfallDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallDataInterval_minColumn {
                get {
                    return this.columnRainfallDataInterval_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallFileColumn {
                get {
                    return this.columnRainfallFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BCDataInterval_minColumn {
                get {
                    return this.columnBCDataInterval_min;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FloodingCellDepthThresholds_cmColumn {
                get {
                    return this.columnFloodingCellDepthThresholds_cm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeASCFileColumn {
                get {
                    return this.columnMakeASCFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MakeImgFileColumn {
                get {
                    return this.columnMakeImgFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputDepthColumn {
                get {
                    return this.columnOutputDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DepthImgRendererMaxVColumn {
                get {
                    return this.columnDepthImgRendererMaxV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputHeightColumn {
                get {
                    return this.columnOutputHeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HeightImgRendererMaxVColumn {
                get {
                    return this.columnHeightImgRendererMaxV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputVelocityMaxColumn {
                get {
                    return this.columnOutputVelocityMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VelocityMaxImgRendererMaxVColumn {
                get {
                    return this.columnVelocityMaxImgRendererMaxV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputFDofMaxVColumn {
                get {
                    return this.columnOutputFDofMaxV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DischargeImgRendererMaxVColumn {
                get {
                    return this.columnDischargeImgRendererMaxV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputDischargeMaxColumn {
                get {
                    return this.columnOutputDischargeMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutputRFGridColumn {
                get {
                    return this.columnOutputRFGrid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RFImgRendererMaxVColumn {
                get {
                    return this.columnRFImgRendererMaxV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WriteLogColumn {
                get {
                    return this.columnWriteLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow this[int index] {
                get {
                    return ((ProjectSettingsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event ProjectSettingsRowChangeEventHandler ProjectSettingsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddProjectSettingsRow(ProjectSettingsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow AddProjectSettingsRow(
                        string DEMFile, 
                        string LandCoverFile, 
                        string LandCoverVatFile, 
                        string StartDateTime, 
                        string IsFixedDT, 
                        double CalculationTimeStep_sec, 
                        string IsParallel, 
                        short MaxDegreeOfParallelism, 
                        string UsingGPU, 
                        int EffCellThresholdForGPU, 
                        short MaxIterationAllCellsOnCPU, 
                        short MaxIterationACellOnCPU, 
                        short MaxIterationAllCellsOnGPU, 
                        short MaxIterationACellOnGPU, 
                        float SimulationDuration_hr, 
                        double PrintoutInterval_min, 
                        string RainfallDataType, 
                        string RainfallDataInterval_min, 
                        string RainfallFile, 
                        string BCDataInterval_min, 
                        string FloodingCellDepthThresholds_cm, 
                        string MakeASCFile, 
                        string MakeImgFile, 
                        string OutputDepth, 
                        double DepthImgRendererMaxV, 
                        string OutputHeight, 
                        double HeightImgRendererMaxV, 
                        string OutputVelocityMax, 
                        double VelocityMaxImgRendererMaxV, 
                        string OutputFDofMaxV, 
                        double DischargeImgRendererMaxV, 
                        string OutputDischargeMax, 
                        string OutputRFGrid, 
                        double RFImgRendererMaxV, 
                        string WriteLog) {
                ProjectSettingsRow rowProjectSettingsRow = ((ProjectSettingsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DEMFile,
                        LandCoverFile,
                        LandCoverVatFile,
                        StartDateTime,
                        IsFixedDT,
                        CalculationTimeStep_sec,
                        IsParallel,
                        MaxDegreeOfParallelism,
                        UsingGPU,
                        EffCellThresholdForGPU,
                        MaxIterationAllCellsOnCPU,
                        MaxIterationACellOnCPU,
                        MaxIterationAllCellsOnGPU,
                        MaxIterationACellOnGPU,
                        SimulationDuration_hr,
                        PrintoutInterval_min,
                        RainfallDataType,
                        RainfallDataInterval_min,
                        RainfallFile,
                        BCDataInterval_min,
                        FloodingCellDepthThresholds_cm,
                        MakeASCFile,
                        MakeImgFile,
                        OutputDepth,
                        DepthImgRendererMaxV,
                        OutputHeight,
                        HeightImgRendererMaxV,
                        OutputVelocityMax,
                        VelocityMaxImgRendererMaxV,
                        OutputFDofMaxV,
                        DischargeImgRendererMaxV,
                        OutputDischargeMax,
                        OutputRFGrid,
                        RFImgRendererMaxV,
                        WriteLog};
                rowProjectSettingsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectSettingsRow);
                return rowProjectSettingsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProjectSettingsDataTable cln = ((ProjectSettingsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProjectSettingsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnDEMFile = base.Columns["DEMFile"];
                this.columnLandCoverFile = base.Columns["LandCoverFile"];
                this.columnLandCoverVatFile = base.Columns["LandCoverVatFile"];
                this.columnStartDateTime = base.Columns["StartDateTime"];
                this.columnIsFixedDT = base.Columns["IsFixedDT"];
                this.columnCalculationTimeStep_sec = base.Columns["CalculationTimeStep_sec"];
                this.columnIsParallel = base.Columns["IsParallel"];
                this.columnMaxDegreeOfParallelism = base.Columns["MaxDegreeOfParallelism"];
                this.columnUsingGPU = base.Columns["UsingGPU"];
                this.columnEffCellThresholdForGPU = base.Columns["EffCellThresholdForGPU"];
                this.columnMaxIterationAllCellsOnCPU = base.Columns["MaxIterationAllCellsOnCPU"];
                this.columnMaxIterationACellOnCPU = base.Columns["MaxIterationACellOnCPU"];
                this.columnMaxIterationAllCellsOnGPU = base.Columns["MaxIterationAllCellsOnGPU"];
                this.columnMaxIterationACellOnGPU = base.Columns["MaxIterationACellOnGPU"];
                this.columnSimulationDuration_hr = base.Columns["SimulationDuration_hr"];
                this.columnPrintoutInterval_min = base.Columns["PrintoutInterval_min"];
                this.columnRainfallDataType = base.Columns["RainfallDataType"];
                this.columnRainfallDataInterval_min = base.Columns["RainfallDataInterval_min"];
                this.columnRainfallFile = base.Columns["RainfallFile"];
                this.columnBCDataInterval_min = base.Columns["BCDataInterval_min"];
                this.columnFloodingCellDepthThresholds_cm = base.Columns["FloodingCellDepthThresholds_cm"];
                this.columnMakeASCFile = base.Columns["MakeASCFile"];
                this.columnMakeImgFile = base.Columns["MakeImgFile"];
                this.columnOutputDepth = base.Columns["OutputDepth"];
                this.columnDepthImgRendererMaxV = base.Columns["DepthImgRendererMaxV"];
                this.columnOutputHeight = base.Columns["OutputHeight"];
                this.columnHeightImgRendererMaxV = base.Columns["HeightImgRendererMaxV"];
                this.columnOutputVelocityMax = base.Columns["OutputVelocityMax"];
                this.columnVelocityMaxImgRendererMaxV = base.Columns["VelocityMaxImgRendererMaxV"];
                this.columnOutputFDofMaxV = base.Columns["OutputFDofMaxV"];
                this.columnDischargeImgRendererMaxV = base.Columns["DischargeImgRendererMaxV"];
                this.columnOutputDischargeMax = base.Columns["OutputDischargeMax"];
                this.columnOutputRFGrid = base.Columns["OutputRFGrid"];
                this.columnRFImgRendererMaxV = base.Columns["RFImgRendererMaxV"];
                this.columnWriteLog = base.Columns["WriteLog"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnDEMFile = new global::System.Data.DataColumn("DEMFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMFile);
                this.columnLandCoverFile = new global::System.Data.DataColumn("LandCoverFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCoverFile);
                this.columnLandCoverVatFile = new global::System.Data.DataColumn("LandCoverVatFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLandCoverVatFile);
                this.columnStartDateTime = new global::System.Data.DataColumn("StartDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDateTime);
                this.columnIsFixedDT = new global::System.Data.DataColumn("IsFixedDT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsFixedDT);
                this.columnCalculationTimeStep_sec = new global::System.Data.DataColumn("CalculationTimeStep_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalculationTimeStep_sec);
                this.columnIsParallel = new global::System.Data.DataColumn("IsParallel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsParallel);
                this.columnMaxDegreeOfParallelism = new global::System.Data.DataColumn("MaxDegreeOfParallelism", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDegreeOfParallelism);
                this.columnUsingGPU = new global::System.Data.DataColumn("UsingGPU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsingGPU);
                this.columnEffCellThresholdForGPU = new global::System.Data.DataColumn("EffCellThresholdForGPU", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffCellThresholdForGPU);
                this.columnMaxIterationAllCellsOnCPU = new global::System.Data.DataColumn("MaxIterationAllCellsOnCPU", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxIterationAllCellsOnCPU);
                this.columnMaxIterationACellOnCPU = new global::System.Data.DataColumn("MaxIterationACellOnCPU", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxIterationACellOnCPU);
                this.columnMaxIterationAllCellsOnGPU = new global::System.Data.DataColumn("MaxIterationAllCellsOnGPU", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxIterationAllCellsOnGPU);
                this.columnMaxIterationACellOnGPU = new global::System.Data.DataColumn("MaxIterationACellOnGPU", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxIterationACellOnGPU);
                this.columnSimulationDuration_hr = new global::System.Data.DataColumn("SimulationDuration_hr", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSimulationDuration_hr);
                this.columnPrintoutInterval_min = new global::System.Data.DataColumn("PrintoutInterval_min", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintoutInterval_min);
                this.columnRainfallDataType = new global::System.Data.DataColumn("RainfallDataType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfallDataType);
                this.columnRainfallDataInterval_min = new global::System.Data.DataColumn("RainfallDataInterval_min", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfallDataInterval_min);
                this.columnRainfallFile = new global::System.Data.DataColumn("RainfallFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfallFile);
                this.columnBCDataInterval_min = new global::System.Data.DataColumn("BCDataInterval_min", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCDataInterval_min);
                this.columnFloodingCellDepthThresholds_cm = new global::System.Data.DataColumn("FloodingCellDepthThresholds_cm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFloodingCellDepthThresholds_cm);
                this.columnMakeASCFile = new global::System.Data.DataColumn("MakeASCFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeASCFile);
                this.columnMakeImgFile = new global::System.Data.DataColumn("MakeImgFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMakeImgFile);
                this.columnOutputDepth = new global::System.Data.DataColumn("OutputDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputDepth);
                this.columnDepthImgRendererMaxV = new global::System.Data.DataColumn("DepthImgRendererMaxV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepthImgRendererMaxV);
                this.columnOutputHeight = new global::System.Data.DataColumn("OutputHeight", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputHeight);
                this.columnHeightImgRendererMaxV = new global::System.Data.DataColumn("HeightImgRendererMaxV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeightImgRendererMaxV);
                this.columnOutputVelocityMax = new global::System.Data.DataColumn("OutputVelocityMax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputVelocityMax);
                this.columnVelocityMaxImgRendererMaxV = new global::System.Data.DataColumn("VelocityMaxImgRendererMaxV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVelocityMaxImgRendererMaxV);
                this.columnOutputFDofMaxV = new global::System.Data.DataColumn("OutputFDofMaxV", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputFDofMaxV);
                this.columnDischargeImgRendererMaxV = new global::System.Data.DataColumn("DischargeImgRendererMaxV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeImgRendererMaxV);
                this.columnOutputDischargeMax = new global::System.Data.DataColumn("OutputDischargeMax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputDischargeMax);
                this.columnOutputRFGrid = new global::System.Data.DataColumn("OutputRFGrid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutputRFGrid);
                this.columnRFImgRendererMaxV = new global::System.Data.DataColumn("RFImgRendererMaxV", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFImgRendererMaxV);
                this.columnWriteLog = new global::System.Data.DataColumn("WriteLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWriteLog);
                this.columnLandCoverVatFile.Caption = "LandCoverFile";
                this.columnCalculationTimeStep_sec.Caption = "MaxDegreeOfParallelism";
                this.columnUsingGPU.Caption = "IsParallel";
                this.columnEffCellThresholdForGPU.Caption = "MaxDegreeOfParallelism";
                this.columnMaxIterationAllCellsOnCPU.Caption = "MaxDegreeOfParallelism";
                this.columnMaxIterationACellOnCPU.Caption = "MaxDegreeOfParallelism";
                this.columnMaxIterationAllCellsOnGPU.Caption = "MaxDegreeOfParallelism";
                this.columnMaxIterationACellOnGPU.Caption = "MaxDegreeOfParallelism";
                this.columnRainfallDataType.Caption = "DataColumn1";
                this.columnDepthImgRendererMaxV.Caption = "OutputDepth";
                this.columnHeightImgRendererMaxV.Caption = "OutputDepth";
                this.columnOutputVelocityMax.Caption = "OutputDepth";
                this.columnVelocityMaxImgRendererMaxV.Caption = "OutputDepth";
                this.columnOutputFDofMaxV.Caption = "OutputDepth";
                this.columnDischargeImgRendererMaxV.Caption = "OutputDepth";
                this.columnOutputRFGrid.Caption = "OutputDepth";
                this.columnRFImgRendererMaxV.Caption = "OutputDepth";
                this.columnWriteLog.Caption = "MakeImgFile";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow NewProjectSettingsRow() {
                return ((ProjectSettingsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProjectSettingsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProjectSettingsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProjectSettingsRowChanged != null)) {
                    this.ProjectSettingsRowChanged(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProjectSettingsRowChanging != null)) {
                    this.ProjectSettingsRowChanging(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProjectSettingsRowDeleted != null)) {
                    this.ProjectSettingsRowDeleted(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProjectSettingsRowDeleting != null)) {
                    this.ProjectSettingsRowDeleting(this, new ProjectSettingsRowChangeEvent(((ProjectSettingsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveProjectSettingsRow(ProjectSettingsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projectds ds = new projectds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectSettingsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HydroParsDataTable : global::System.Data.TypedTableBase<HydroParsRow> {
            
            private global::System.Data.DataColumn columnRoughnessCoeff;
            
            private global::System.Data.DataColumn columnDomainOutBedSlope;
            
            private global::System.Data.DataColumn columnInitialConditionType;
            
            private global::System.Data.DataColumn columnInitialCondition;
            
            private global::System.Data.DataColumn columnFroudeNumberCriteria;
            
            private global::System.Data.DataColumn columnCourantNumber;
            
            private global::System.Data.DataColumn columnApplyVNC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HydroParsDataTable() {
                this.TableName = "HydroPars";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal HydroParsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected HydroParsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RoughnessCoeffColumn {
                get {
                    return this.columnRoughnessCoeff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DomainOutBedSlopeColumn {
                get {
                    return this.columnDomainOutBedSlope;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InitialConditionTypeColumn {
                get {
                    return this.columnInitialConditionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InitialConditionColumn {
                get {
                    return this.columnInitialCondition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FroudeNumberCriteriaColumn {
                get {
                    return this.columnFroudeNumberCriteria;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CourantNumberColumn {
                get {
                    return this.columnCourantNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ApplyVNCColumn {
                get {
                    return this.columnApplyVNC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HydroParsRow this[int index] {
                get {
                    return ((HydroParsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HydroParsRowChangeEventHandler HydroParsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HydroParsRowChangeEventHandler HydroParsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HydroParsRowChangeEventHandler HydroParsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event HydroParsRowChangeEventHandler HydroParsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddHydroParsRow(HydroParsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HydroParsRow AddHydroParsRow(double RoughnessCoeff, double DomainOutBedSlope, string InitialConditionType, string InitialCondition, double FroudeNumberCriteria, double CourantNumber, bool ApplyVNC) {
                HydroParsRow rowHydroParsRow = ((HydroParsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RoughnessCoeff,
                        DomainOutBedSlope,
                        InitialConditionType,
                        InitialCondition,
                        FroudeNumberCriteria,
                        CourantNumber,
                        ApplyVNC};
                rowHydroParsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHydroParsRow);
                return rowHydroParsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HydroParsDataTable cln = ((HydroParsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HydroParsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnRoughnessCoeff = base.Columns["RoughnessCoeff"];
                this.columnDomainOutBedSlope = base.Columns["DomainOutBedSlope"];
                this.columnInitialConditionType = base.Columns["InitialConditionType"];
                this.columnInitialCondition = base.Columns["InitialCondition"];
                this.columnFroudeNumberCriteria = base.Columns["FroudeNumberCriteria"];
                this.columnCourantNumber = base.Columns["CourantNumber"];
                this.columnApplyVNC = base.Columns["ApplyVNC"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnRoughnessCoeff = new global::System.Data.DataColumn("RoughnessCoeff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoughnessCoeff);
                this.columnDomainOutBedSlope = new global::System.Data.DataColumn("DomainOutBedSlope", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDomainOutBedSlope);
                this.columnInitialConditionType = new global::System.Data.DataColumn("InitialConditionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialConditionType);
                this.columnInitialCondition = new global::System.Data.DataColumn("InitialCondition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitialCondition);
                this.columnFroudeNumberCriteria = new global::System.Data.DataColumn("FroudeNumberCriteria", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFroudeNumberCriteria);
                this.columnCourantNumber = new global::System.Data.DataColumn("CourantNumber", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourantNumber);
                this.columnApplyVNC = new global::System.Data.DataColumn("ApplyVNC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplyVNC);
                this.columnInitialConditionType.Caption = "InitialDepth";
                this.columnCourantNumber.Caption = "FroudNumberCriteria";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HydroParsRow NewHydroParsRow() {
                return ((HydroParsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HydroParsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HydroParsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HydroParsRowChanged != null)) {
                    this.HydroParsRowChanged(this, new HydroParsRowChangeEvent(((HydroParsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HydroParsRowChanging != null)) {
                    this.HydroParsRowChanging(this, new HydroParsRowChangeEvent(((HydroParsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HydroParsRowDeleted != null)) {
                    this.HydroParsRowDeleted(this, new HydroParsRowChangeEvent(((HydroParsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HydroParsRowDeleting != null)) {
                    this.HydroParsRowDeleting(this, new HydroParsRowChangeEvent(((HydroParsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveHydroParsRow(HydroParsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projectds ds = new projectds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HydroParsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RainfallDataTable : global::System.Data.TypedTableBase<RainfallRow> {
            
            private global::System.Data.DataColumn columnOrder;
            
            private global::System.Data.DataColumn columnRainfall;
            
            private global::System.Data.DataColumn columnDataFile;
            
            private global::System.Data.DataColumn columnDataTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RainfallDataTable() {
                this.TableName = "Rainfall";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal RainfallDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected RainfallDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OrderColumn {
                get {
                    return this.columnOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RainfallColumn {
                get {
                    return this.columnRainfall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataFileColumn {
                get {
                    return this.columnDataFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataTimeColumn {
                get {
                    return this.columnDataTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RainfallRow this[int index] {
                get {
                    return ((RainfallRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RainfallRowChangeEventHandler RainfallRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RainfallRowChangeEventHandler RainfallRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RainfallRowChangeEventHandler RainfallRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event RainfallRowChangeEventHandler RainfallRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddRainfallRow(RainfallRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RainfallRow AddRainfallRow(int Order, string Rainfall, string DataFile, string DataTime) {
                RainfallRow rowRainfallRow = ((RainfallRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Order,
                        Rainfall,
                        DataFile,
                        DataTime};
                rowRainfallRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRainfallRow);
                return rowRainfallRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RainfallDataTable cln = ((RainfallDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RainfallDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnOrder = base.Columns["Order"];
                this.columnRainfall = base.Columns["Rainfall"];
                this.columnDataFile = base.Columns["DataFile"];
                this.columnDataTime = base.Columns["DataTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnOrder = new global::System.Data.DataColumn("Order", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrder);
                this.columnRainfall = new global::System.Data.DataColumn("Rainfall", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRainfall);
                this.columnDataFile = new global::System.Data.DataColumn("DataFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataFile);
                this.columnDataTime = new global::System.Data.DataColumn("DataTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataTime);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RainfallRow NewRainfallRow() {
                return ((RainfallRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RainfallRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RainfallRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RainfallRowChanged != null)) {
                    this.RainfallRowChanged(this, new RainfallRowChangeEvent(((RainfallRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RainfallRowChanging != null)) {
                    this.RainfallRowChanging(this, new RainfallRowChangeEvent(((RainfallRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RainfallRowDeleted != null)) {
                    this.RainfallRowDeleted(this, new RainfallRowChangeEvent(((RainfallRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RainfallRowDeleting != null)) {
                    this.RainfallRowDeleting(this, new RainfallRowChangeEvent(((RainfallRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveRainfallRow(RainfallRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projectds ds = new projectds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RainfallDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BoundaryConditionDataDataTable : global::System.Data.TypedTableBase<BoundaryConditionDataRow> {
            
            private global::System.Data.DataColumn columnCellXY;
            
            private global::System.Data.DataColumn columnDataFile;
            
            private global::System.Data.DataColumn columnDataType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BoundaryConditionDataDataTable() {
                this.TableName = "BoundaryConditionData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal BoundaryConditionDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected BoundaryConditionDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CellXYColumn {
                get {
                    return this.columnCellXY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataFileColumn {
                get {
                    return this.columnDataFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DataTypeColumn {
                get {
                    return this.columnDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BoundaryConditionDataRow this[int index] {
                get {
                    return ((BoundaryConditionDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BoundaryConditionDataRowChangeEventHandler BoundaryConditionDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BoundaryConditionDataRowChangeEventHandler BoundaryConditionDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BoundaryConditionDataRowChangeEventHandler BoundaryConditionDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event BoundaryConditionDataRowChangeEventHandler BoundaryConditionDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddBoundaryConditionDataRow(BoundaryConditionDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BoundaryConditionDataRow AddBoundaryConditionDataRow(string CellXY, string DataFile, string DataType) {
                BoundaryConditionDataRow rowBoundaryConditionDataRow = ((BoundaryConditionDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CellXY,
                        DataFile,
                        DataType};
                rowBoundaryConditionDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBoundaryConditionDataRow);
                return rowBoundaryConditionDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BoundaryConditionDataDataTable cln = ((BoundaryConditionDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BoundaryConditionDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnCellXY = base.Columns["CellXY"];
                this.columnDataFile = base.Columns["DataFile"];
                this.columnDataType = base.Columns["DataType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnCellXY = new global::System.Data.DataColumn("CellXY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellXY);
                this.columnDataFile = new global::System.Data.DataColumn("DataFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataFile);
                this.columnDataType = new global::System.Data.DataColumn("DataType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataType);
                this.columnCellXY.Caption = "DataFile";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BoundaryConditionDataRow NewBoundaryConditionDataRow() {
                return ((BoundaryConditionDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BoundaryConditionDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BoundaryConditionDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BoundaryConditionDataRowChanged != null)) {
                    this.BoundaryConditionDataRowChanged(this, new BoundaryConditionDataRowChangeEvent(((BoundaryConditionDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BoundaryConditionDataRowChanging != null)) {
                    this.BoundaryConditionDataRowChanging(this, new BoundaryConditionDataRowChangeEvent(((BoundaryConditionDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BoundaryConditionDataRowDeleted != null)) {
                    this.BoundaryConditionDataRowDeleted(this, new BoundaryConditionDataRowChangeEvent(((BoundaryConditionDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BoundaryConditionDataRowDeleting != null)) {
                    this.BoundaryConditionDataRowDeleting(this, new BoundaryConditionDataRowChangeEvent(((BoundaryConditionDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveBoundaryConditionDataRow(BoundaryConditionDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projectds ds = new projectds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BoundaryConditionDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEMFileToChangeDataTable : global::System.Data.TypedTableBase<DEMFileToChangeRow> {
            
            private global::System.Data.DataColumn columnTimeMinute;
            
            private global::System.Data.DataColumn columnDEMFile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public DEMFileToChangeDataTable() {
                this.TableName = "DEMFileToChange";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal DEMFileToChangeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected DEMFileToChangeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TimeMinuteColumn {
                get {
                    return this.columnTimeMinute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DEMFileColumn {
                get {
                    return this.columnDEMFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public DEMFileToChangeRow this[int index] {
                get {
                    return ((DEMFileToChangeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event DEMFileToChangeRowChangeEventHandler DEMFileToChangeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event DEMFileToChangeRowChangeEventHandler DEMFileToChangeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event DEMFileToChangeRowChangeEventHandler DEMFileToChangeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event DEMFileToChangeRowChangeEventHandler DEMFileToChangeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddDEMFileToChangeRow(DEMFileToChangeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public DEMFileToChangeRow AddDEMFileToChangeRow(string TimeMinute, string DEMFile) {
                DEMFileToChangeRow rowDEMFileToChangeRow = ((DEMFileToChangeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TimeMinute,
                        DEMFile};
                rowDEMFileToChangeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEMFileToChangeRow);
                return rowDEMFileToChangeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEMFileToChangeDataTable cln = ((DEMFileToChangeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEMFileToChangeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnTimeMinute = base.Columns["TimeMinute"];
                this.columnDEMFile = base.Columns["DEMFile"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnTimeMinute = new global::System.Data.DataColumn("TimeMinute", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimeMinute);
                this.columnDEMFile = new global::System.Data.DataColumn("DEMFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEMFile);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public DEMFileToChangeRow NewDEMFileToChangeRow() {
                return ((DEMFileToChangeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEMFileToChangeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEMFileToChangeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEMFileToChangeRowChanged != null)) {
                    this.DEMFileToChangeRowChanged(this, new DEMFileToChangeRowChangeEvent(((DEMFileToChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEMFileToChangeRowChanging != null)) {
                    this.DEMFileToChangeRowChanging(this, new DEMFileToChangeRowChangeEvent(((DEMFileToChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEMFileToChangeRowDeleted != null)) {
                    this.DEMFileToChangeRowDeleted(this, new DEMFileToChangeRowChangeEvent(((DEMFileToChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEMFileToChangeRowDeleting != null)) {
                    this.DEMFileToChangeRowDeleting(this, new DEMFileToChangeRowChangeEvent(((DEMFileToChangeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemoveDEMFileToChangeRow(DEMFileToChangeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projectds ds = new projectds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEMFileToChangeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectSettingsRow : global::System.Data.DataRow {
            
            private ProjectSettingsDataTable tableProjectSettings;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal ProjectSettingsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProjectSettings = ((ProjectSettingsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DEMFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.DEMFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'DEMFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.DEMFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandCoverFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LandCoverFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LandCoverFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LandCoverFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LandCoverVatFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.LandCoverVatFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'LandCoverVatFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.LandCoverVatFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StartDateTime {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.StartDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'StartDateTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.StartDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsFixedDT {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.IsFixedDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'IsFixedDT\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.IsFixedDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CalculationTimeStep_sec {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.CalculationTimeStep_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'CalculationTimeStep_sec\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.CalculationTimeStep_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IsParallel {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.IsParallelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'IsParallel\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.IsParallelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short MaxDegreeOfParallelism {
                get {
                    try {
                        return ((short)(this[this.tableProjectSettings.MaxDegreeOfParallelismColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MaxDegreeOfParallelism\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MaxDegreeOfParallelismColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UsingGPU {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.UsingGPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'UsingGPU\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.UsingGPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int EffCellThresholdForGPU {
                get {
                    try {
                        return ((int)(this[this.tableProjectSettings.EffCellThresholdForGPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'EffCellThresholdForGPU\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.EffCellThresholdForGPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short MaxIterationAllCellsOnCPU {
                get {
                    try {
                        return ((short)(this[this.tableProjectSettings.MaxIterationAllCellsOnCPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MaxIterationAllCellsOnCPU\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MaxIterationAllCellsOnCPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short MaxIterationACellOnCPU {
                get {
                    try {
                        return ((short)(this[this.tableProjectSettings.MaxIterationACellOnCPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MaxIterationACellOnCPU\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MaxIterationACellOnCPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short MaxIterationAllCellsOnGPU {
                get {
                    try {
                        return ((short)(this[this.tableProjectSettings.MaxIterationAllCellsOnGPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MaxIterationAllCellsOnGPU\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MaxIterationAllCellsOnGPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short MaxIterationACellOnGPU {
                get {
                    try {
                        return ((short)(this[this.tableProjectSettings.MaxIterationACellOnGPUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MaxIterationACellOnGPU\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MaxIterationACellOnGPUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float SimulationDuration_hr {
                get {
                    try {
                        return ((float)(this[this.tableProjectSettings.SimulationDuration_hrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'SimulationDuration_hr\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.SimulationDuration_hrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double PrintoutInterval_min {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.PrintoutInterval_minColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'PrintoutInterval_min\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.PrintoutInterval_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RainfallDataType {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.RainfallDataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'RainfallDataType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.RainfallDataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RainfallDataInterval_min {
                get {
                    if (this.IsRainfallDataInterval_minNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProjectSettings.RainfallDataInterval_minColumn]));
                    }
                }
                set {
                    this[this.tableProjectSettings.RainfallDataInterval_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RainfallFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.RainfallFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'RainfallFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.RainfallFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BCDataInterval_min {
                get {
                    if (this.IsBCDataInterval_minNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableProjectSettings.BCDataInterval_minColumn]));
                    }
                }
                set {
                    this[this.tableProjectSettings.BCDataInterval_minColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FloodingCellDepthThresholds_cm {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.FloodingCellDepthThresholds_cmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'FloodingCellDepthThresholds_cm\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.FloodingCellDepthThresholds_cmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeASCFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeASCFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeASCFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeASCFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MakeImgFile {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.MakeImgFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'MakeImgFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.MakeImgFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputDepth {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputDepth\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DepthImgRendererMaxV {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.DepthImgRendererMaxVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'DepthImgRendererMaxV\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.DepthImgRendererMaxVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputHeight {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputHeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputHeight\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputHeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HeightImgRendererMaxV {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.HeightImgRendererMaxVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'HeightImgRendererMaxV\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.HeightImgRendererMaxVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputVelocityMax {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputVelocityMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputVelocityMax\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputVelocityMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double VelocityMaxImgRendererMaxV {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.VelocityMaxImgRendererMaxVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'VelocityMaxImgRendererMaxV\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.VelocityMaxImgRendererMaxVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputFDofMaxV {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputFDofMaxVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputFDofMaxV\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputFDofMaxVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DischargeImgRendererMaxV {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.DischargeImgRendererMaxVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'DischargeImgRendererMaxV\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.DischargeImgRendererMaxVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputDischargeMax {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputDischargeMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputDischargeMax\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputDischargeMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutputRFGrid {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.OutputRFGridColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'OutputRFGrid\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.OutputRFGridColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double RFImgRendererMaxV {
                get {
                    try {
                        return ((double)(this[this.tableProjectSettings.RFImgRendererMaxVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'RFImgRendererMaxV\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.RFImgRendererMaxVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WriteLog {
                get {
                    try {
                        return ((string)(this[this.tableProjectSettings.WriteLogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'ProjectSettings\' 테이블의 \'WriteLog\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableProjectSettings.WriteLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDEMFileNull() {
                return this.IsNull(this.tableProjectSettings.DEMFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDEMFileNull() {
                this[this.tableProjectSettings.DEMFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandCoverFileNull() {
                return this.IsNull(this.tableProjectSettings.LandCoverFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandCoverFileNull() {
                this[this.tableProjectSettings.LandCoverFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLandCoverVatFileNull() {
                return this.IsNull(this.tableProjectSettings.LandCoverVatFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLandCoverVatFileNull() {
                this[this.tableProjectSettings.LandCoverVatFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStartDateTimeNull() {
                return this.IsNull(this.tableProjectSettings.StartDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStartDateTimeNull() {
                this[this.tableProjectSettings.StartDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsFixedDTNull() {
                return this.IsNull(this.tableProjectSettings.IsFixedDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsFixedDTNull() {
                this[this.tableProjectSettings.IsFixedDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCalculationTimeStep_secNull() {
                return this.IsNull(this.tableProjectSettings.CalculationTimeStep_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCalculationTimeStep_secNull() {
                this[this.tableProjectSettings.CalculationTimeStep_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsParallelNull() {
                return this.IsNull(this.tableProjectSettings.IsParallelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsParallelNull() {
                this[this.tableProjectSettings.IsParallelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxDegreeOfParallelismNull() {
                return this.IsNull(this.tableProjectSettings.MaxDegreeOfParallelismColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxDegreeOfParallelismNull() {
                this[this.tableProjectSettings.MaxDegreeOfParallelismColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUsingGPUNull() {
                return this.IsNull(this.tableProjectSettings.UsingGPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUsingGPUNull() {
                this[this.tableProjectSettings.UsingGPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEffCellThresholdForGPUNull() {
                return this.IsNull(this.tableProjectSettings.EffCellThresholdForGPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEffCellThresholdForGPUNull() {
                this[this.tableProjectSettings.EffCellThresholdForGPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxIterationAllCellsOnCPUNull() {
                return this.IsNull(this.tableProjectSettings.MaxIterationAllCellsOnCPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxIterationAllCellsOnCPUNull() {
                this[this.tableProjectSettings.MaxIterationAllCellsOnCPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxIterationACellOnCPUNull() {
                return this.IsNull(this.tableProjectSettings.MaxIterationACellOnCPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxIterationACellOnCPUNull() {
                this[this.tableProjectSettings.MaxIterationACellOnCPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxIterationAllCellsOnGPUNull() {
                return this.IsNull(this.tableProjectSettings.MaxIterationAllCellsOnGPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxIterationAllCellsOnGPUNull() {
                this[this.tableProjectSettings.MaxIterationAllCellsOnGPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxIterationACellOnGPUNull() {
                return this.IsNull(this.tableProjectSettings.MaxIterationACellOnGPUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxIterationACellOnGPUNull() {
                this[this.tableProjectSettings.MaxIterationACellOnGPUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSimulationDuration_hrNull() {
                return this.IsNull(this.tableProjectSettings.SimulationDuration_hrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSimulationDuration_hrNull() {
                this[this.tableProjectSettings.SimulationDuration_hrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrintoutInterval_minNull() {
                return this.IsNull(this.tableProjectSettings.PrintoutInterval_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrintoutInterval_minNull() {
                this[this.tableProjectSettings.PrintoutInterval_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallDataTypeNull() {
                return this.IsNull(this.tableProjectSettings.RainfallDataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallDataTypeNull() {
                this[this.tableProjectSettings.RainfallDataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallDataInterval_minNull() {
                return this.IsNull(this.tableProjectSettings.RainfallDataInterval_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallDataInterval_minNull() {
                this[this.tableProjectSettings.RainfallDataInterval_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallFileNull() {
                return this.IsNull(this.tableProjectSettings.RainfallFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallFileNull() {
                this[this.tableProjectSettings.RainfallFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBCDataInterval_minNull() {
                return this.IsNull(this.tableProjectSettings.BCDataInterval_minColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBCDataInterval_minNull() {
                this[this.tableProjectSettings.BCDataInterval_minColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFloodingCellDepthThresholds_cmNull() {
                return this.IsNull(this.tableProjectSettings.FloodingCellDepthThresholds_cmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFloodingCellDepthThresholds_cmNull() {
                this[this.tableProjectSettings.FloodingCellDepthThresholds_cmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeASCFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeASCFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeASCFileNull() {
                this[this.tableProjectSettings.MakeASCFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMakeImgFileNull() {
                return this.IsNull(this.tableProjectSettings.MakeImgFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMakeImgFileNull() {
                this[this.tableProjectSettings.MakeImgFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputDepthNull() {
                return this.IsNull(this.tableProjectSettings.OutputDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputDepthNull() {
                this[this.tableProjectSettings.OutputDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDepthImgRendererMaxVNull() {
                return this.IsNull(this.tableProjectSettings.DepthImgRendererMaxVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDepthImgRendererMaxVNull() {
                this[this.tableProjectSettings.DepthImgRendererMaxVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputHeightNull() {
                return this.IsNull(this.tableProjectSettings.OutputHeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputHeightNull() {
                this[this.tableProjectSettings.OutputHeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHeightImgRendererMaxVNull() {
                return this.IsNull(this.tableProjectSettings.HeightImgRendererMaxVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHeightImgRendererMaxVNull() {
                this[this.tableProjectSettings.HeightImgRendererMaxVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputVelocityMaxNull() {
                return this.IsNull(this.tableProjectSettings.OutputVelocityMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputVelocityMaxNull() {
                this[this.tableProjectSettings.OutputVelocityMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVelocityMaxImgRendererMaxVNull() {
                return this.IsNull(this.tableProjectSettings.VelocityMaxImgRendererMaxVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVelocityMaxImgRendererMaxVNull() {
                this[this.tableProjectSettings.VelocityMaxImgRendererMaxVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputFDofMaxVNull() {
                return this.IsNull(this.tableProjectSettings.OutputFDofMaxVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputFDofMaxVNull() {
                this[this.tableProjectSettings.OutputFDofMaxVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDischargeImgRendererMaxVNull() {
                return this.IsNull(this.tableProjectSettings.DischargeImgRendererMaxVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDischargeImgRendererMaxVNull() {
                this[this.tableProjectSettings.DischargeImgRendererMaxVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputDischargeMaxNull() {
                return this.IsNull(this.tableProjectSettings.OutputDischargeMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputDischargeMaxNull() {
                this[this.tableProjectSettings.OutputDischargeMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutputRFGridNull() {
                return this.IsNull(this.tableProjectSettings.OutputRFGridColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutputRFGridNull() {
                this[this.tableProjectSettings.OutputRFGridColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRFImgRendererMaxVNull() {
                return this.IsNull(this.tableProjectSettings.RFImgRendererMaxVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRFImgRendererMaxVNull() {
                this[this.tableProjectSettings.RFImgRendererMaxVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWriteLogNull() {
                return this.IsNull(this.tableProjectSettings.WriteLogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWriteLogNull() {
                this[this.tableProjectSettings.WriteLogColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HydroParsRow : global::System.Data.DataRow {
            
            private HydroParsDataTable tableHydroPars;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal HydroParsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHydroPars = ((HydroParsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double RoughnessCoeff {
                get {
                    try {
                        return ((double)(this[this.tableHydroPars.RoughnessCoeffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'RoughnessCoeff\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.RoughnessCoeffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DomainOutBedSlope {
                get {
                    try {
                        return ((double)(this[this.tableHydroPars.DomainOutBedSlopeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'DomainOutBedSlope\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.DomainOutBedSlopeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InitialConditionType {
                get {
                    try {
                        return ((string)(this[this.tableHydroPars.InitialConditionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'InitialConditionType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.InitialConditionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InitialCondition {
                get {
                    try {
                        return ((string)(this[this.tableHydroPars.InitialConditionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'InitialCondition\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.InitialConditionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double FroudeNumberCriteria {
                get {
                    try {
                        return ((double)(this[this.tableHydroPars.FroudeNumberCriteriaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'FroudeNumberCriteria\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.FroudeNumberCriteriaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double CourantNumber {
                get {
                    try {
                        return ((double)(this[this.tableHydroPars.CourantNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'CourantNumber\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.CourantNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool ApplyVNC {
                get {
                    try {
                        return ((bool)(this[this.tableHydroPars.ApplyVNCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'HydroPars\' 테이블의 \'ApplyVNC\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableHydroPars.ApplyVNCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRoughnessCoeffNull() {
                return this.IsNull(this.tableHydroPars.RoughnessCoeffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRoughnessCoeffNull() {
                this[this.tableHydroPars.RoughnessCoeffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDomainOutBedSlopeNull() {
                return this.IsNull(this.tableHydroPars.DomainOutBedSlopeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDomainOutBedSlopeNull() {
                this[this.tableHydroPars.DomainOutBedSlopeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInitialConditionTypeNull() {
                return this.IsNull(this.tableHydroPars.InitialConditionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInitialConditionTypeNull() {
                this[this.tableHydroPars.InitialConditionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInitialConditionNull() {
                return this.IsNull(this.tableHydroPars.InitialConditionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInitialConditionNull() {
                this[this.tableHydroPars.InitialConditionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFroudeNumberCriteriaNull() {
                return this.IsNull(this.tableHydroPars.FroudeNumberCriteriaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFroudeNumberCriteriaNull() {
                this[this.tableHydroPars.FroudeNumberCriteriaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCourantNumberNull() {
                return this.IsNull(this.tableHydroPars.CourantNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCourantNumberNull() {
                this[this.tableHydroPars.CourantNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsApplyVNCNull() {
                return this.IsNull(this.tableHydroPars.ApplyVNCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetApplyVNCNull() {
                this[this.tableHydroPars.ApplyVNCColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RainfallRow : global::System.Data.DataRow {
            
            private RainfallDataTable tableRainfall;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal RainfallRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRainfall = ((RainfallDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Order {
                get {
                    try {
                        return ((int)(this[this.tableRainfall.OrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Rainfall\' 테이블의 \'Order\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRainfall.OrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Rainfall {
                get {
                    try {
                        return ((string)(this[this.tableRainfall.RainfallColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Rainfall\' 테이블의 \'Rainfall\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRainfall.RainfallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DataFile {
                get {
                    try {
                        return ((string)(this[this.tableRainfall.DataFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Rainfall\' 테이블의 \'DataFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRainfall.DataFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DataTime {
                get {
                    try {
                        return ((string)(this[this.tableRainfall.DataTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'Rainfall\' 테이블의 \'DataTime\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableRainfall.DataTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOrderNull() {
                return this.IsNull(this.tableRainfall.OrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOrderNull() {
                this[this.tableRainfall.OrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRainfallNull() {
                return this.IsNull(this.tableRainfall.RainfallColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRainfallNull() {
                this[this.tableRainfall.RainfallColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDataFileNull() {
                return this.IsNull(this.tableRainfall.DataFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDataFileNull() {
                this[this.tableRainfall.DataFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDataTimeNull() {
                return this.IsNull(this.tableRainfall.DataTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDataTimeNull() {
                this[this.tableRainfall.DataTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BoundaryConditionDataRow : global::System.Data.DataRow {
            
            private BoundaryConditionDataDataTable tableBoundaryConditionData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal BoundaryConditionDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBoundaryConditionData = ((BoundaryConditionDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CellXY {
                get {
                    if (this.IsCellXYNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableBoundaryConditionData.CellXYColumn]));
                    }
                }
                set {
                    this[this.tableBoundaryConditionData.CellXYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DataFile {
                get {
                    try {
                        return ((string)(this[this.tableBoundaryConditionData.DataFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'BoundaryConditionData\' 테이블의 \'DataFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableBoundaryConditionData.DataFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DataType {
                get {
                    try {
                        return ((string)(this[this.tableBoundaryConditionData.DataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'BoundaryConditionData\' 테이블의 \'DataType\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableBoundaryConditionData.DataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCellXYNull() {
                return this.IsNull(this.tableBoundaryConditionData.CellXYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCellXYNull() {
                this[this.tableBoundaryConditionData.CellXYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDataFileNull() {
                return this.IsNull(this.tableBoundaryConditionData.DataFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDataFileNull() {
                this[this.tableBoundaryConditionData.DataFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDataTypeNull() {
                return this.IsNull(this.tableBoundaryConditionData.DataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDataTypeNull() {
                this[this.tableBoundaryConditionData.DataTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEMFileToChangeRow : global::System.Data.DataRow {
            
            private DEMFileToChangeDataTable tableDEMFileToChange;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal DEMFileToChangeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEMFileToChange = ((DEMFileToChangeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TimeMinute {
                get {
                    try {
                        return ((string)(this[this.tableDEMFileToChange.TimeMinuteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DEMFileToChange\' 테이블의 \'TimeMinute\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDEMFileToChange.TimeMinuteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DEMFile {
                get {
                    try {
                        return ((string)(this[this.tableDEMFileToChange.DEMFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("\'DEMFileToChange\' 테이블의 \'DEMFile\' 열의 값이 DBNull입니다.", e);
                    }
                }
                set {
                    this[this.tableDEMFileToChange.DEMFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTimeMinuteNull() {
                return this.IsNull(this.tableDEMFileToChange.TimeMinuteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTimeMinuteNull() {
                this[this.tableDEMFileToChange.TimeMinuteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDEMFileNull() {
                return this.IsNull(this.tableDEMFileToChange.DEMFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDEMFileNull() {
                this[this.tableDEMFileToChange.DEMFileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class ProjectSettingsRowChangeEvent : global::System.EventArgs {
            
            private ProjectSettingsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRowChangeEvent(ProjectSettingsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public ProjectSettingsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class HydroParsRowChangeEvent : global::System.EventArgs {
            
            private HydroParsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HydroParsRowChangeEvent(HydroParsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public HydroParsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class RainfallRowChangeEvent : global::System.EventArgs {
            
            private RainfallRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RainfallRowChangeEvent(RainfallRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public RainfallRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class BoundaryConditionDataRowChangeEvent : global::System.EventArgs {
            
            private BoundaryConditionDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BoundaryConditionDataRowChangeEvent(BoundaryConditionDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public BoundaryConditionDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class DEMFileToChangeRowChangeEvent : global::System.EventArgs {
            
            private DEMFileToChangeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public DEMFileToChangeRowChangeEvent(DEMFileToChangeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public DEMFileToChangeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591